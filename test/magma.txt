N := 11;
q := 32;
p := 3;
R<X> := PolynomialRing(Integers());
Rp := PolynomialRing(GF(p));
Rq := PolynomialRing(ResidueClassRing(q));
// public key 
h := 16*X^10 + 19*X^9 + 12*X^8 + 19*X^7 + 15*X^6 + 24*X^5 + 12*X^4 + 20*X^3 + 22*X^2 + 25*X + 8;
// message
m := -1 + X^3 - X^4 - X^8 + X^9 + X^10;
// random polynomial
r := -1 + X^2 + X^3 + X^4 - X^5 - X^7;
// ciphertext
e := R!Rq!((r*h + m) mod (X^N - 1));
print e;
